swagger: "2.0"
info:
  title: Student Budget
  description: Rest Api model
  version: 1.0.0
tags:
- name: "User"
- name: "Transaction"
- name: "Account"
paths:
  /user:
    post:
      tags:
        - "User"
      summary: Add new user
      description: SQL
      parameters:
      - in: "body"
        name: "body"
        description: "New user that needs to be added to DB"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        '200':
          description: Successful operation
  /user/{email}:
    get:
      tags:
        - "User"
      summary: Finds user by email
      description: SQL
      parameters:
        - name: "email"
          in: "path"
          description: "returns User if registered"
          required: true
          type: "string"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/User"

  /transanctions:
    post:
      tags:
        - "Transaction"
      summary: Add new transaction
      description: SQL
      parameters:
      - in: "body"
        name: "body"
        description: "Add new transaction"
        required: true
        schema:
          $ref: "#/definitions/TransactionsPost"
      responses:
        '200':
          description: Successful operation
          
  /transanctions/{month}:
    get:
      tags:
        - "Transaction"
      summary: Return all transaction of user in {month}
      description: SQL
      parameters:
      - name: "month"
        in: "path"
        description: "return transanctions in month"
        required: true
        type: "string"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/TransactionsGet"
            
  /account:
    post:
      tags:
        - "Account"
      summary: Add new account
      description: SQL
      parameters:
      - in: "body"
        name: "body"
        description: "Add new transaction"
        required: true
        schema:
          $ref: "#/definitions/AccountPost"
      responses:
        '200':
          description: Successful operation
  /account/{account_name}:
    put:
      tags:
        - "Account"
      summary: Update credit on account
      description: SQL
      parameters:
        - name: "account_name"
          in: "path"
          description: "Update credit on account"
          required: true
          type: "string"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/AccountPost"
    get:
      tags:
        - "Account"
      summary: Returns all transactions paid by account_name
      description: SQL
      parameters:
        - name: "account_name"
          in: "path"
          description: "Returns all transactions paid by account_name"
          required: true
          type: "string"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/AccountGetTransactions"
    delete:
      tags:
        - "Account"
      summary: Delete users account
      description: SQL
      parameters:
        - name: "account_name"
          in: "path"
          description: "Delete users account"
          required: true
          type: "string"
      responses:
        "200":
          description: "Successful delete operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
          
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      password:
        type: "string"
  
  TransactionsPost:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      Sum:
        type: "integer"
        format: "float"
      Category:
        type: "string"
      Timestamp:
        type: "string"
        format: "date-time"
      Email:
        type: "string"  
  
  TransactionsGet:
    type: "array"
    items:
      $ref: "#/definitions/TransactionProperties"
  
  TransactionProperties:
    properties:
        id:
          type: "integer"
          format: "int64"
        Sum:
          type: "integer"
          format: "float"
        Category:
          type: "string"
        Timestamp:
          type: "string"
          format: "date-time"
        Email:
          type: "string"
  
  AccountPost:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      value:
        type: "integer"
        format: "float"
        
  AccountGetTransactions:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      value:
        type: "integer"
        format: "float"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/TransactionProperties"
      
        